
When to use SQL instead of NoSQL

01

You’re working with complex queries and reports.

With SQL you can build one script that retrieves and presents your data. NoSQL doesn’t support relations between data types. Running queries in NoSQL is doable, but much slower.

02

You have a high transaction application.

SQL databases are a better fit for heavy duty or complex transactions because it’s more stable and ensure data integrity.

03

You need to ensure ACID compliance.

(Atomicity, Consistency, Isolation, Durability) or defining exactly how transactions interact with a database. 

04

You don’t anticipate a lot of changes or growth.

If you’re not working with a large volume of data or many data types, NoSQL would be overkill.

When to use NoSQL instead of SQL

01

You are constantly adding new features, functions, data types.

It’s difficult to predict how the application will grow over time.

02

Changing a data model is SQL is clunky and requires code changes.

A lot of time is invested designing the data model because changes will impact all or most of the layers in the application.

03

In NoSQL, we are working with a highly flexible schema design or no predefined schema.

The data modeling process is iterative and adaptive. Changing the structure or schema will not impact development cycles or create any downtime for the application.

04

You are not concerned about data consistency and 100% data integrity is not your top goal.

This is related to the above SQL requirement for ACID compliance. For example, with social media platforms, it isn’t important if everyone sees your new post at the exact same time, which means data consistency is not a priority.

05

You have a lot of data, many different data types, and your data needs will only grow over time.

NoSQL makes it easy to store all different types of data together and without having to invest time into defining what type of data you’re storing in advance.

06

Your data needs scale up, out, and down.

As discussed above, NoSQL provides much greater flexibility and the ability to control costs as your data needs change.
